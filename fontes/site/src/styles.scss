// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Care-plus-primary: mat-palette($mat-indigo);
$Care-plus-accent : mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Care-plus-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$Care-plus-theme: mat-light-theme($Care-plus-primary, $Care-plus-accent, $Care-plus-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($Care-plus-theme);

@import "typeface-montserrat/index.css";
@import "scss/_styleguide.scss";
@import "scss/_base.scss";
@import "~saturn-datepicker/bundle.css";

html,
body {
    height: 100%;
}

body {
    margin     : 0;
    font-family: $mainFont, Roboto, "Helvetica Neue", sans-serif;
}

.mat-icon {
    font-family: "Material Icons" !important;
}

.no-scroll {
    overflow: hidden;
    position: fixed;
    width   : 100%;
    height  : 100%;
}

* {
    font-family: Montserrat !important;
}

vg-mute,
vg-fullscreen,
vg-play-pause,
vg-playback-button {
    align-items: center;
}

.bupa-navy {
    &.color {
        color: getColor(_bupa, _navy);
    }

    &.fill {
        * {
            fill: getColor(_bupa, _navy);
        }
    }

    &.background,
    &.button {
        background: getColor(_bupa, _navy);
    }

    &.button {
        &:hover {
            -webkit-transition: background 0.3s ease-in-out;
            -moz-transition   : background 0.3s ease-in-out;
            transition        : background-color 0.3s ease-in-out;
        }

        &.outline:not(:disabled) {
            border    : 2px solid getColor(_bupa, _navy) !important;
            box-sizing: border-box;
            background: #ffffff !important;
            color     : getColor(_bupa, _navy) !important;
        }
    }
}

.bupa-digital-cyan {
    &.color {
        color: getColor(_bupa, _digital-cian);
    }

    &.fill {
        * {
            fill: getColor(_bupa, _digital-cian);
        }
    }

    &.background,
    &.button {
        background: getColor(_bupa, _digital-cian);
    }

    &.button {
        &:hover {
            -webkit-transition: background 0.3s ease-in-out;
            -moz-transition   : background 0.3s ease-in-out;
            transition        : background-color 0.3s ease-in-out;
        }

        &.outline:not(:disabled) {
            border    : 2px solid getColor(_bupa, _digital-cian) !important;
            box-sizing: border-box;
            background: #ffffff !important;
            color     : getColor(_bupa, _digital-cian) !important;
        }
    }
}

.has-more-margin-bottom {
    margin-bottom: 5%;
}

.disabled {
    pointer-events: none;
}

.flex-wrap {
    flex-wrap: wrap;
}