$date = (Get-Date -format "yyyyMMddhhmmss");if ($args.Count -lt 1){   $pathlog = "\instaladorCarePlus\"+$date+"loginstall_GMUD_202303300800_Institucional_Normal.txt";   Start-Transcript -path $pathlog;    $tipoinstall = Read-Host "Escolha o tipo de instalacao, H = UAT, S = Pre-Producao , P = Producao e E = UatExterno";} else {    $param1 = $args[0];     if ($null -eq $param1) {        $pathlog = "\instaladorCarePlus\"+$date+"loginstall_GMUD_202303300800_Institucional_Normal.txt";        Start-Transcript -path $pathlog;         $tipoinstall = Read-Host "Escolha o tipo de instalacao, H = UAT, S = Pre-Producao, P = Producao e E = UatExterno";    } else {         if (($param1 -eq "P") -or ($param1 -eq "H") -or ($param1 -eq "S") -or ($param1 -eq "E") ) {                $pathlog = "N";                $tipoinstall = $param1;         } else {               $pathlog = "\instaladorCarePlus\"+$date+"loginstall_GMUD_202303300800_Institucional_Normal.txt";               Start-Transcript -path $pathlog;                $tipoinstall = Read-Host "Escolha o tipo de instalacao, H = UAT, S = Pre-Producao, P = Producao e E = UatExterno";        }    }}if (($tipoinstall -eq "P") -or ($tipoinstall -eq "S") -or ($tipoinstall -eq "H") -or ($tipoinstall -eq "E")  ) {$iisVersion = Get-ItemProperty 'HKLM:\software\microsoft\InetStp\';if ($iisVersion.MajorVersion -eq 7) {if ($iisVersion.MinorVersion -ge 5) {Import-Module WebAdministration;} Else {if (-not (Get-PSSnapIn | Where {$_.Name -eq "WebAdministration";})) {Add-PSSnapin WebAdministration;}}}Try { Write-Output "Inicio da desinstalacao do pacote GMUD_202303300800_Institucional_Normal.";$compName=hostname;$instalacaoValida=1;If ($tipoinstall.ToUpper() -eq "P") {   Write-Output "Selecionada a instalacao para PRODUCAO.";   If(-Not($compName.ToUpper() -eq "BRSP01WS-008")){      Write-Output "Servidor de PRODUCAO invalido.";      $instalacaoValida=0; }} Else {    Write-Output "Selecionada a instalacao para TESTES.";   If($compName.ToUpper() -eq "BRSP01WS-008"){      Write-Output "Servidor de TESTES invalido.";      $instalacaoValida=0; }} If($instalacaoValida) {Write-Output "Parar POOL";Stop-WebAppPool -Name 'careplus-institucional';Write-Output "POOL parado";$segundos=10;Write-Output "Aguardando $segundos segundos para iniciar o POOL...";Start-Sleep -s $segundos;Write-Output "Iniciar o POOL";Start-WebAppPool -Name 'careplus-institucional';Write-Output "POOL iniciado";Write-Output "Voltar o backup";$pathBackup="E:\GMUD\Backup";Write-Output "O backup sera restaurado de " $pathBackup;Copy-Item $pathBackup\* -destination E:\http\careplus\dist -Force -Recurse;Write-Output "Arquivos copiados com sucesso";$contador = 0;$programas = ,@("careplus-institucional",54,"E:\http\careplus\dist",1942);If(($tipoinstall.ToUpper() -eq "H")) {$sql = "set hea OFF;`n";Write-Output "Removendo data de UAT do pacote...";$sql += "UPDATE app_deploy.tb_installPACOTE SET DATAQA = null WHERE CODIGO = 11965;`n";$res = ($sql|sqlplus -s app_deploy/\`"7f1%U!~IFzGPa\`"@BRDC01ORC-001.careplus.intranet:1522/care);Write-Output $res; } else {If($tipoinstall.ToUpper() -eq "S") {$sql = "set hea OFF;`n";Write-Output "Removendo data de PreProd do pacote...";$sql += "UPDATE app_deploy.tb_installPACOTE SET datapreprod = null WHERE CODIGO = 11965;`n";$res = ($sql|sqlplus -s app_deploy/\`"7f1%U!~IFzGPa\`"@BRDC01ORC-001.careplus.intranet:1522/care);Write-Output $res; }}Write-Output "Registrando log de Desinstalacao do programa...";$sql = "set hea OFF;`n";$sql += "INSERT INTO app_deploy.tb_installLOG (CODIGO,CODPACOTE,DATA,ACAO,CODCONFIG) VALUES(app_deploy.SQ_INSTALLLOG.NEXTVAL,11965,sysdate,2,1942);`n";If($tipoinstall.ToUpper() -eq "P") {$res = ($sql|sqlplus -s app_deploy/\`"7f1%U!~IFzGPa\`"@BRDC01ORC-001.careplus.intranet:1522/care); Else { If(($tipoinstall.ToUpper() -eq "H")) {$res = ($sql|sqlplus -s app_deploy/\`"oqrb-k55SyU3\`"@BRDC01ORC-500.careplus.intranet:1521/cp_uat); } else { If($tipoinstall.ToUpper() -eq "S") {$res = ($sql|sqlplus -s app_deploy/\`"Pr3pr0d713\`"@BRDC01ORC-500.careplus.intranet:1521/cp_pr_prod); }} } Write-Output $res;Write-Output "Desinstalacao concluida com sucesso"; }}}Catch{ Write-Output $_.Exception.GetType().FullName, $_.Exception.Message } } if ($pathlog -ne "N") { Stop-Transcript; }